*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="notify.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "sdt.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	Name = "Dataenvironment"

ENDDEFINE

DEFINE CLASS frmnotify AS sdtmodaldialog OF "sdtcontrols.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="edtMessage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtDisplay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPrint" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: calias		&& Alias of the messages table.
	*</DefinedPropArrayMethod>

	calias = 		&& Alias of the messages table.
	Caption = "Note"
	DoCreate = .T.
	Height = 256
	Name = "frmNotify"
	Width = 375

	ADD OBJECT 'cmdOK' AS sdtokbuttontext WITH ;
		Left = 100, ;
		Name = "cmdOK", ;
		TabIndex = 3, ;
		Top = 215
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdPrint' AS sdtcommandbutton WITH ;
		Caption = "Print", ;
		Left = 190, ;
		Name = "cmdPrint", ;
		TabIndex = 4, ;
		Top = 215
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtDisplay' AS sdteditbox WITH ;
		Height = 128, ;
		Left = 15, ;
		Name = "edtDisplay", ;
		ReadOnly = .T., ;
		SelectOnEntry = .F., ;
		TabIndex = 2, ;
		Top = 76, ;
		Width = 346
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="editbox" />

	ADD OBJECT 'edtMessage' AS sdtreadonlyeditbox WITH ;
		BorderStyle = 0, ;
		Height = 49, ;
		Left = 15, ;
		Name = "edtMessage", ;
		ScrollBars = 0, ;
		SpecialEffect = 1, ;
		TabIndex = 1, ;
		Top = 10, ;
		Width = 346
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="editbox" />
	
	PROCEDURE Init
		lparameters tcAlias, ;
			toError
		
		* Set the values of the form controls to the parameters.
		
		with This
			.cAlias           = tcAlias
			.oError           = toError
			.edtMessage.Value = evaluate(tcAlias + '.MESSAGE')
			.edtDisplay.Value = evaluate(tcAlias + '.NOTIFY')
			.Caption          = ccFRM_NOTIFY_CAPTION
		endwith
		
		* Call the base behavior.
		
		dodefault()
		
	ENDPROC

	PROCEDURE cmdOK.Click
		Thisform.Release()
		
	ENDPROC

	PROCEDURE cmdPrint.Click
		local lnCurrSelect
		lnCurrSelect = select()
		select (Thisform.cAlias)
		report form NOTIFY noconsole to print prompt
		select (lnCurrSelect)
		
	ENDPROC

	PROCEDURE edtMessage.When
		return .F.
		
	ENDPROC

ENDDEFINE
