*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="sdtcontrols.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS sdtcheckbox AS sfcheckbox OF "..\..\sfcommon\sfctrls.vcx" 		&& Base class for CheckBox objects
 	*< CLASSDATA: Baseclass="checkbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdtcheckbox"
	
	PROCEDURE RightClick
		Thisform.ShowMenu()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtcombobox AS sfcombobox OF "..\..\sfcommon\sfctrls.vcx" 		&& Base class for ComboBox objects
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdtcombobox"
	
	PROCEDURE RightClick
		Thisform.ShowMenu()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtcommandbutton AS sfcommandbutton OF "..\..\sfcommon\sfctrls.vcx" 		&& Base class for CommandButton objects
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdtcommandbutton"
	
	PROCEDURE RightClick
		Thisform.ShowMenu()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtcontainer AS sfcontainer OF "..\..\sfcommon\sfctrls.vcx" 		&& Base class for Container objects
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdtcontainer"
	
	PROCEDURE RightClick
		Thisform.ShowMenu()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtcustom AS sfcustom OF "..\..\sfcommon\sfctrls.vcx" 		&& Base class for Custom objects
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdtcustom"

ENDDEFINE

DEFINE CLASS sdteditbox AS sfeditbox OF "..\..\sfcommon\sfctrls.vcx" 		&& Base class for EditBox objects
 	*< CLASSDATA: Baseclass="editbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	luseformshortcutmenu = .T.
	Name = "sdteditbox"

ENDDEFINE

DEFINE CLASS sdtexitbutton AS sdtpicturebutton OF "sdtcontrols.vcx" 		&& A CommandButton that closes the form it's on
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Cancel = .T.
	Name = "sfexitbutton"
	Picture = close.bmp
	StatusBarText = "Exit"
	ToolTipText = "Exit"
	
	PROCEDURE about
		*==============================================================================
		* Class:				SFExitButton
		* Based On:				SFPictureButton
		* Purpose:				Close the form it's on
		* Author:				Doug Hennig
		* Copyright:			(c) 1996 Stonefield Systems Group Inc.
		* Last revision:		08/28/96
		*
		* Changes in "Based On" class properties:
		*	Cancel:				.T. so Escape activates it
		*	Picture:			WZCLOSE.BMP
		*	StatusBarText:		Exit
		*	ToolTipText:		Exit
		*
		* Changes in "Based On" class methods:
		*	Click:				Thisform.Release() to close the form
		*
		* Custom properties added:
		*	None
		*
		* Custom methods added:
		*	None
		*==============================================================================
		
	ENDPROC

	PROCEDURE Click
		Thisform.Release()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtexitbuttontext AS sdtexitbutton OF "sdtcontrols.vcx" 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "Cancel"
	Height = 28
	Name = "sdtexitbuttontext"
	Picture = ..\
	StatusBarText = ""
	ToolTipText = ""
	Width = 84
	
	PROCEDURE Init
		dodefault()
		This.SpecialEffect = 0
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtform AS sfform OF "..\..\sfcommon\sfctrls.vcx" 		&& The base class for Form objects
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	Desktop = .F.
	DoCreate = .T.
	Icon = wrench.ico
	Name = "sdtform"
	ShowWindow = 0
	
	PROCEDURE Activate
		* Ensure our help and error handling is used.
		
		if type('_screen.SDTController.Name') = 'C'
			_screen.SDTController.SetupHelp()
			_screen.SDTController.SetupError()
		endif type('_screen.SDTController.Name') = 'C'
		dodefault()
		
	ENDPROC

	PROCEDURE Deactivate
		* Restore the former help and turn off error handling.
		
		if type('_screen.SDTController.Name') = 'C'
			_screen.SDTController.RestoreHelp()
			_screen.SDTController.RestoreError()
		endif type('_screen.SDTController.Name') = 'C'
		dodefault()
		
	ENDPROC

	PROCEDURE Init
		* Set the font to the preferences.
		
		dodefault()
		if type('_screen.SDTController.Name') = 'C'
			This.SetAll('FontName', _screen.SDTController.cFontName)
			This.SetAll('FontSize', _screen.SDTController.nFontSize)
		endif type('_screen.SDTController.Name') = 'C'
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtgrid AS sfgrid OF "..\..\sfcommon\sfctrls.vcx" 		&& The base class for Grid objects
 	*< CLASSDATA: Baseclass="grid" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdtgrid"
	
	PROCEDURE RightClick
		Thisform.ShowMenu()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdthelpbutton AS sdtpicturebutton OF "sdtcontrols.vcx" 		&& A CommandButton that brings up help
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdthelpbutton"
	Picture = help.bmp
	StatusBarText = "Help"
	ToolTipText = "Help"
	
	PROCEDURE about
		*==============================================================================
		* Class:				SFHelpButton
		* Based On:				SFPictureButton
		* Purpose:				Brings up the Windows Help
		* Author:				Doug Hennig
		* Copyright:			(c) 1996 Stonefield Systems Group Inc.
		* Last revision:		08/03/99
		*
		* Changes in "Based On" class properties:
		*	Picture:			HELP.BMP
		*	StatusBarText:		Help
		*	ToolTipText:		Help
		*
		* Changes in "Based On" class methods:
		*	Click:				issues a HELP command
		*
		* Custom properties added:
		*	None
		*
		* Custom methods added:
		*	None
		*==============================================================================
		
	ENDPROC

	PROCEDURE Click
		if Thisform.HelpContextID = 0
			help
		else
			help id Thisform.HelpContextID
		endif Thisform.HelpContextID = 0
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdthelpbuttontext AS sdthelpbutton OF "sdtcontrols.vcx" 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "Help"
	Height = 28
	Name = "sdthelpbuttontext"
	Picture = ..\
	StatusBarText = ""
	ToolTipText = ""
	Width = 84
	
	PROCEDURE Init
		dodefault()
		This.SpecialEffect = 0
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtimage AS sfimage OF "..\..\sfcommon\sfctrls.vcx" 		&& The base class for Image objects
 	*< CLASSDATA: Baseclass="image" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdtimage"
	
	PROCEDURE RightClick
		Thisform.ShowMenu()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtlabel AS sflabel OF "..\..\sfcommon\sfctrls.vcx" 		&& The base class for Label objects
 	*< CLASSDATA: Baseclass="label" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdtlabel"
	
	PROCEDURE RightClick
		Thisform.ShowMenu()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtlabelledbox AS sdtcontainer OF "sdtcontrols.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="shpBox" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblLabel" UniqueID="" Timestamp="" />

	builder = builders.vcx,SFLabelledBoxBuilder
	Height = 100
	Name = "sdtlabelledbox"
	Width = 200

	ADD OBJECT 'lblLabel' AS sdtlabel WITH ;
		BackStyle = 1, ;
		Caption = " Box Label ", ;
		Left = 5, ;
		Name = "lblLabel", ;
		Top = 0
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="label" />

	ADD OBJECT 'shpBox' AS sdtshape WITH ;
		Height = 94, ;
		Left = 0, ;
		Name = "shpBox", ;
		Top = 6, ;
		Width = 200
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="shape" />
	
	PROCEDURE Init
		* Make the controls themed in VFP 8 and later.
		
		if version(5) >= 800
			This.SetAll('Style', 3)
			This.Style = 3
		endif version(5) >= 800
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtlinelabel AS sdtlabel OF "sdtcontrols.vcx" 		&& A Label that provides a caption for a box
 	*< CLASSDATA: Baseclass="label" Timestamp="" Scale="Pixels" Uniqueid="" />

	BackStyle = 1
	Name = "sdtlinelabel"
	
	PROCEDURE Init
		if type('This.Parent.BackColor') <> 'U'
			This.BackColor = This.Parent.BackColor
		endif type('This.Parent.BackColor') <> 'U'
		
		* Make this themed in VFP 8 and later.
		
		if version(5) >= 800
			This.Style = 3
		endif version(5) >= 800
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtlistbox AS sflistbox OF "..\..\sfcommon\sfctrls.vcx" 		&& The base class for ListBox objects
 	*< CLASSDATA: Baseclass="listbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdtlistbox"
	
	PROCEDURE RightClick
		Thisform.ShowMenu()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtmodaldialog AS sdtform OF "sdtcontrols.vcx" 		&& The base class for modal dialogs
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	DoCreate = .T.
	MaxButton = .F.
	MinButton = .F.
	Name = "sdtmodaldialog"
	WindowType = 1

ENDDEFINE

DEFINE CLASS sdtokbuttontext AS sdtcommandbutton OF "sdtcontrols.vcx" 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "OK"
	Default = .T.
	Height = 28
	Name = "sfokbuttontext"

ENDDEFINE

DEFINE CLASS sdtoptiongroup AS sfoptiongroup OF "..\..\sfcommon\sfctrls.vcx" 
 	*< CLASSDATA: Baseclass="optiongroup" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdtoptiongroup"
	Option1.Caption = "Option1"
	Option1.Height = 17
	Option1.Left = 5
	Option1.Name = "Option1"
	Option1.Top = 5
	Option1.Value = 1
	Option1.Width = 61
	Option2.Caption = "Option2"
	Option2.Height = 17
	Option2.Left = 5
	Option2.Name = "Option2"
	Option2.Top = 24
	Option2.Width = 61

ENDDEFINE

DEFINE CLASS sdtpageframe AS sfpageframe OF "..\..\sfcommon\sfctrls.vcx" 		&& The base class for PageFrame objects
 	*< CLASSDATA: Baseclass="pageframe" Timestamp="" Scale="Pixels" Uniqueid="" />

	ErasePage = .T.
	Name = "sdtpageframe"
	PAGE1.Name = "PAGE1"
	
	PROCEDURE Init
		* This comment is here so we don't get the normal Init behavior.
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtpicturebutton AS sfpicturebutton OF "..\..\sfcommon\sfbutton.vcx" 		&& The base class for CommandButtons with a picture
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "sdt.h"
	Name = "sdtpicturebutton"
	
	PROCEDURE Click
		local llEnabled
		if clVFP7ORLATER
			with This
				llEnabled     = .Enabled
				.VisualEffect = 0
				.Enabled      = llEnabled
			endwith
		endif clVFP7ORLATER
		
	ENDPROC

	PROCEDURE Init
		if clVFP7ORLATER
			This.SpecialEffect = 2
		endif clVFP7ORLATER
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtreadonlycheckbox AS sdtcheckbox OF "sdtcontrols.vcx" 		&& A CheckBox that appears to be read-only
 	*< CLASSDATA: Baseclass="checkbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	DisabledBackColor = 255,0,0
	DisabledForeColor = 0,0,0
	Enabled = .F.
	Name = "sdtreadonlycheckbox"
	
	PROCEDURE When
		return .F.
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtreadonlycombobox AS sdtcombobox OF "sdtcontrols.vcx" 		&& A ComboBox that appears to be read-only
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	BackColor = 192,192,192
	MousePointer = 1
	Name = "sdtreadonlycombobox"
	ReadOnly = .T.
	
	PROCEDURE Init
		This.BackColor = This.Parent.BackColor
		dodefault()
		
	ENDPROC

	PROCEDURE When
		return .F.
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtreadonlyeditbox AS sdteditbox OF "sdtcontrols.vcx" 
 	*< CLASSDATA: Baseclass="editbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	MousePointer = 1
	Name = "sdtreadonlyeditbox"
	ReadOnly = .T.

ENDDEFINE

DEFINE CLASS sdtreadonlyspinner AS sdtspinner OF "sdtcontrols.vcx" 		&& A Spinner that appears to be read-only
 	*< CLASSDATA: Baseclass="spinner" Timestamp="" Scale="Pixels" Uniqueid="" />

	MousePointer = 1
	Name = "sdtreadonlyspinner"
	ReadOnly = .T.
	
	PROCEDURE When
		return .F.
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtreadonlytextbox AS sdttextbox OF "sdtcontrols.vcx" 		&& A TextBox that appears to be read-only
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	MousePointer = 1
	Name = "sdtreadonlytextbox"
	ReadOnly = .T.
	
	PROCEDURE When
		return .F.
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtshape AS sfshape OF "..\..\sfcommon\sfctrls.vcx" 		&& The base class for all Shape objects
 	*< CLASSDATA: Baseclass="shape" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdtshape"
	
	PROCEDURE RightClick
		Thisform.ShowMenu()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sdtspinner AS sfspinner OF "..\..\sfcommon\sfctrls.vcx" 		&& The base class for all Spinner objects
 	*< CLASSDATA: Baseclass="spinner" Timestamp="" Scale="Pixels" Uniqueid="" />

	luseformshortcutmenu = .T.
	Name = "sdtspinner"

ENDDEFINE

DEFINE CLASS sdttextbox AS sftextbox OF "..\..\sfcommon\sfctrls.vcx" 		&& The base class for all TextBox objects
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	luseformshortcutmenu = .T.
	Name = "sdttextbox"

ENDDEFINE

DEFINE CLASS sdttimer AS sftimer OF "..\..\sfcommon\sfctrls.vcx" 		&& The base class for all Timer objects
 	*< CLASSDATA: Baseclass="timer" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "sdttimer"

ENDDEFINE
