*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="getfield.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "sdt.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	Name = "Dataenvironment"

ENDDEFINE

DEFINE CLASS frmgetfields AS sdtmodaldialog OF "sdtcontrols.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oMover" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdHelp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: oparameters		&& A reference to a PassParameters object, used to return an array of selected fields.
	*</DefinedPropArrayMethod>

	Caption = "Get Fields From Field Repository"
	DoCreate = .T.
	Height = 203
	HelpContextID = 47
	Name = "frmGetFields"
	oparameters = .NULL.		&& A reference to a PassParameters object, used to return an array of selected fields.
	Width = 468

	ADD OBJECT 'cmdCancel' AS sdtexitbuttontext WITH ;
		Left = 192, ;
		Name = "cmdCancel", ;
		TabIndex = 3, ;
		Top = 165
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdHelp' AS sdthelpbuttontext WITH ;
		Left = 282, ;
		Name = "cmdHelp", ;
		TabIndex = 4, ;
		Top = 165
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS sdtokbuttontext WITH ;
		Left = 102, ;
		Name = "cmdOK", ;
		TabIndex = 2, ;
		Top = 165
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'oMover' AS sfmoverlist WITH ;
		Left = 11, ;
		lremovefromavailable = .T., ;
		Name = "oMover", ;
		TabIndex = 1, ;
		Top = 10, ;
		cmdAdd.Name = "cmdAdd", ;
		cmdAddAll.Name = "cmdAddAll", ;
		cmdRemove.Name = "cmdRemove", ;
		cmdRemoveAll.Name = "cmdRemoveAll", ;
		lstAvailable.Name = "lstAvailable", ;
		lstSelected.Name = "lstSelected"
		*< END OBJECT: ClassLib="..\..\sfcommon\sfmover.vcx" BaseClass="container" />
	
	PROCEDURE Init
		lparameters toSDTForm, ;
			toParameters
		local laFields[1], ;
			lcField
		
		* Load the mover object's available list with the fields from the Field
		* Repository (the LIBCOREMETA table) that don't already appear in this table.
		
		with This
			acopy(toParameters.aArray, laFields)
			select LIBCOREMETA
			set order to ObjectName
			scan for cObjectNam = ccLIBRARY_TABLE
				lcField = padr(substr(cObjectNam, at('.', cObjectNam) + 1), ;
					len(_FIELDS.CFIELD))
				if toSDTForm.oUtility.ArrayScan(@laFields, lcField) = 0
					.oMover.lstAvailable.AddItem(lcField)
				endif toSDTForm.oUtility.ArrayScan(@laFields, lcField) = 0
			endscan for cObjectNam = ccLIBRARY_TABLE
		
		* Initialize the array of fields to blanks, and carry on with the normal Init()
		* code.
		
			.oParameters = toParameters
			toParameters.aArray = ''
		endwith
		dodefault()
		
	ENDPROC

	PROCEDURE cmdOK.Click
		* Create an array of selected fields to be returned to the calling form.
		
		local lnI
		with Thisform
			if .oMover.lstSelected.ListCount > 0
				dimension .oParameters.aArray[.oMover.lstSelected.ListCount]
				for lnI = 1 to .oMover.lstSelected.ListCount
					.oParameters.aArray[lnI] = .oMover.lstSelected.List[lnI]
				next lnI
			endif .oMover.lstSelected.ListCount > 0
			.Release()
		endwith
		
	ENDPROC

ENDDEFINE
