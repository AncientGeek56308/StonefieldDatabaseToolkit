*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="indexwiz.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "sdt.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmindexwiz AS sdtmodaldialog OF "sdtcontrols.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="chkDeleted" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkEvery" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkUpper" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdHelp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSave" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgTagType" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	Caption = "Index Wizard"
	DoCreate = .T.
	Height = 174
	HelpContextID = 105
	Name = "frmIndexWiz"
	outility = .NULL.
	Width = 285
	_memberdata = <VFPData>

		</VFPData>		&& XML Metadata for customizable properties

	ADD OBJECT 'chkDeleted' AS sdtcheckbox WITH ;
		Caption = "Create tag on DELETED()", ;
		Left = 40, ;
		Name = "chkDeleted", ;
		TabIndex = 1, ;
		Top = 10, ;
		Value = .T.
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkEvery' AS sdtcheckbox WITH ;
		Caption = "Create tag on every field", ;
		Left = 40, ;
		Name = "chkEvery", ;
		TabIndex = 3, ;
		Top = 80, ;
		Value = .T., ;
		_memberdata = <VFPData>

		</VFPData>
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkUpper' AS sdtcheckbox WITH ;
		Caption = "Use UPPER() for character fields", ;
		Left = 40, ;
		Name = "chkUpper", ;
		TabIndex = 4, ;
		Top = 100, ;
		_memberdata = <VFPData>

		</VFPData>
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS sdtexitbuttontext WITH ;
		Left = 100, ;
		Name = "cmdCancel", ;
		TabIndex = 6, ;
		Top = 135
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdHelp' AS sdthelpbuttontext WITH ;
		Left = 190, ;
		Name = "cmdHelp", ;
		TabIndex = 7, ;
		Top = 135
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSave' AS sdtokbuttontext WITH ;
		Left = 10, ;
		Name = "cmdSave", ;
		TabIndex = 5, ;
		Top = 135
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'opgTagType' AS sdtoptiongroup WITH ;
		Height = 45, ;
		Left = 65, ;
		Name = "opgTagType", ;
		TabIndex = 2, ;
		Top = 30, ;
		Width = 104, ;
		_memberdata = <VFPData>

		</VFPData>, ;
		Option1.AutoSize = .T., ;
		Option1.BackStyle = 0, ;
		Option1.Caption = "Binary index", ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 0, ;
		Option1._memberdata = , ;
		Option2.AutoSize = .T., ;
		Option2.BackStyle = 0, ;
		Option2.Caption = "Regular index", ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 20, ;
		Option2._memberdata =
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="optiongroup" />
	
	PROCEDURE Init
		lparameters toUtility, ;
			toError
		dodefault()
		with This
			.oUtility = toUtility
			.oError   = toError
			.Caption  = ccFRM_IDXWIZ_CAPTION
			if version(5) < 900
				.opgTagType.Value = 2
				.opgTagType.Option1.Enabled = .F.
			endif version(5) < 900
		endwith
		
	ENDPROC

	PROCEDURE cmdSave.Click
		local lcType, ;
			lnRecno, ;
			lcCollate, ;
			lcField, ;
			lcTag, ;
			lcExpression
		wait window strtran(ccMSG_CREATING, ccMSG_INSERT1, ccINDEXES) nowait
		
		* Create a tag on DELETED() if necessary.
		
		with Thisform
			if .chkDeleted.Value
				select _INDEXES
				seek 'DELETED'
				if not found()
					lcType = iif(.opgTagType.Value = 1, 'Binary', 'Regular')
					insert into _INDEXES (NAME, TYPE, EXPRESSION, COMMENT, CAPTION, ;
						COLLATE) values ('DELETED', lcType, 'deleted()', ;
						ccDELETED_TAG_COMMENT, 'Deleted', 'Machine')
				endif not found()
			endif .chkDeleted.Value
		
		* Create a tag on each field if necessary.
		
			if .chkEvery.Value
				select _FIELDS
				lnRecno   = recno()
				lcCollate = set('COLLATE')
				scan
					lcField = trim(CFIELD)
					lcTag   = padr(CFIELD, cnVF_INDEX_MAXNAMELEN)
					lcType  = trim(XTYPE)
					if not inlist(lcType, 'Memo',  'General') and ;
						not seek(lcTag, '_INDEXES')
						lcExpression = iif(lcType = 'Character' and ;
							.chkUpper.Value, 'upper(' + lcField + ')', lcField)
						insert into _INDEXES (NAME, TYPE, EXPRESSION, CAPTION, ;
							COLLATE, SELECT) values (lcTag, 'Regular', lcExpression, ;
							trim(_FIELDS.XCAPTION), lcCollate, .T.)
					endif not inlist(lcType, ...
				endscan
				.oUtility.Reposition(lnRecno)
			endif .chkEvery.Value
			wait clear
			select _INDEXES
			.Release()
		endwith
		
	ENDPROC

ENDDEFINE
