*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="seldbc.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "sdt.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	Name = "Dataenvironment"

ENDDEFINE

DEFINE CLASS frmseldbc AS sdtmodaldialog OF "sdtcontrols.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lstDatabases" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oCommonDialog" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOther" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: selectdatabase
		*p: cdatabase		&& The name of the selected database.
		*a: adbc[1,0]		&& An array of currently open databases.
	*</DefinedPropArrayMethod>

	Caption = "Select Database"
	cdatabase = 		&& The name of the selected database.
	DoCreate = .T.
	Height = 127
	HelpContextID = 1000000160
	Name = "frmSelDBC"
	Width = 314

	ADD OBJECT 'cmdExit' AS sdtcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "Exit", ;
		Left = 225, ;
		Name = "cmdExit", ;
		TabIndex = 4, ;
		Top = 85, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOther' AS sdtcommandbutton WITH ;
		Caption = "Other...", ;
		Left = 225, ;
		Name = "cmdOther", ;
		TabIndex = 3, ;
		Top = 50, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSelect' AS sdtcommandbutton WITH ;
		Caption = "Select", ;
		Left = 225, ;
		Name = "cmdSelect", ;
		TabIndex = 2, ;
		Top = 15, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lstDatabases' AS sdtlistbox WITH ;
		Height = 110, ;
		Left = 10, ;
		Name = "lstDatabases", ;
		RowSource = "Thisform.aDBC", ;
		RowSourceType = 5, ;
		TabIndex = 1, ;
		Top = 10, ;
		Width = 205, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="sdtcontrols.vcx" BaseClass="listbox" />

	ADD OBJECT 'oCommonDialog' AS sfcommondialog WITH ;
		Left = 295, ;
		lfilemustexist = .T., ;
		Name = "oCommonDialog", ;
		Top = 5
		*< END OBJECT: ClassLib="..\..\sfcommon\sfutility.vcx" BaseClass="custom" />
	
	PROCEDURE Init
		lparameters tcDatabase, ;
			taDatabases, ;
			toUtility
		with This
			acopy(taDatabases, .aDBC)
			.lstDatabases.Requery()
			.lstDatabases.ListIndex = iif(empty(tcDatabase), 1, ;
				max(1, toUtility.ArrayScan(@taDatabases, tcDatabase, 2)))
			dodefault()
			.Caption = ccFRM_SELDBC_CAPTION
		endwith
		
	ENDPROC

	PROCEDURE selectdatabase
		with This
			if .lstDatabases.ListIndex <> 0
				.cDatabase = .aDBC[This.lstDatabases.ListIndex, 2]
			endif .lstDatabases.ListIndex <> 0
			.Release()
		endwith
		
	ENDPROC

	PROCEDURE Unload
		return This.cDatabase
		
	ENDPROC

	PROCEDURE cmdExit.Click
		Thisform.Release()
		
	ENDPROC

	PROCEDURE cmdOther.Click
		* Use the CommonDialog object to get the name of the database to open.
		
		local lcFile
		with Thisform.oCommonDialog
			.ClearFilters(.T.)
			.AddFilter('Database (*.DBC)', '*.DBC')
			.cTitleBarText = 'Open Database'
			.ShowDialog()
			lcFile = addbs(.cFilePath) + .cFileTitle
			if not empty(lcFile)
				Thisform.cDatabase = lcFile
				Thisform.Release()
			endif not empty(lcFile)
		endwith
		
	ENDPROC

	PROCEDURE cmdSelect.Click
		Thisform.SelectDatabase()
		
	ENDPROC

	PROCEDURE lstDatabases.DblClick
		Thisform.SelectDatabase()
		
	ENDPROC

ENDDEFINE
